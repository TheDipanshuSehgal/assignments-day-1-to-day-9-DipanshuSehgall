
#include <iostream>
#include <vector>

class Solution {
public:
    bool PredictTheWinner(std::vector<int>& nums) {
        int n = nums.size();
        std::vector<std::vector<int>> dp(n, std::vector<int>(n, 0));

        for (int i = 0; i < n; i++) {
            dp[i][i] = nums[i];
        }

        for (int d = 1; d < n; d++) {
            for (int i = 0; i < n - d; i++) {
                int j = i + d;
                dp[i][j] = std::max(nums[i] - dp[i + 1][j], nums[j] - dp[i][j - 1]);
            }
        }

        return dp[0][n - 1] >= 0;
    }
};

// Example usage
int main() {
    Solution solution;
    std::vector<int> nums = {1, 5, 233, 7};
    bool result = solution.PredictTheWinner(nums);

    std::cout << "Can Player 1 win the game? " << (result ? "Yes" : "No") << std::endl;

    return 0;
}


OUTPUT :

Can Player 1 win the game? Yes


=== Code Execution Successful ===
